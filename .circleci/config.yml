version: 2.1

commands:
  install-poetry:
    steps:
      - run:
          name: "Install poetry"
          command: |
            curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
            source $HOME/.poetry/env
            echo 'export PATH="$HOME/.poetry/bin:$PATH"' > ~/.bashrc

jobs:
#  run-tests:
#    parameters:
#      image:
#        type:string
#    docker:
#      - image: << parameters.name >>
#    steps:
#      - checkout
#      - install-poetry
#      - run:
#          name: "Run tests"
#          command: |
#            python --version
#            source $HOME/.poetry/env
#            poetry install
#            mkdir -p coverage_output
#            export COVERAGE_FILE=coverage_output/.coverage.$CIRCLE_BUILD_NUM
#            poetry run pytest --cov playground -s test.py
#      - persist_to_workspace:
#          root: coverage_output
#          paths:
#            - .coverage.*
#
#  python-27:
#    docker:
#      - image: python:2.7
#    steps:
#      - run-tests
#
#  python-37:
#    docker:
#      - image: python:3.7
#    steps:
#      - run-tests
#
  coverage:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: coverage_output
      - run:
          name: "Check coverage"
          command: |
            pip install coverage
            coverage combine coverage_output/
            coverage report --show-missing --skip-covered --fail-under=100

  release:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - install-poetry
      - run:
          name: "Release"
          command: |
            poetry --help
#            pip install carthorse
#            carthorse

  sayhello: # defines a parameterized job
    description: A job that does very little other than demonstrate what a parameterized job looks like
    parameters:
      saywhat:
        description: "To whom shall we say hello?"
        default: "World"
        type: string
    machine: true
    steps:
      - run: echo "Hello << parameters.saywhat >>"

workflows:
  build:
    jobs:
      - sayhello: # invokes the parameterized job
          saywhat: Everyone
#common: &common
#  jobs:
#    - run-tests:
#        image: python:2.7
#    - run-tests:
#        name: python37
#        image: python:3.7
#    - python-37
#    - coverage:
#        requires:
#          - python27
#          - python37
#    - release:
#        requires:
#          - coverage
#        filters:
#          branches:
#            only: master
#
#workflows:
#  push:
#    jobs:
#      - run-tests:
#          image: python:2.7
#  periodic:
#    <<: *common
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only: master
