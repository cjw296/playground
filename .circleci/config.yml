version: 2.1

environment:
  BASH_ENV: "~/.bashrc"
  
commands:
  install-poetry:
    steps:
      - run:
          name: "Install poetry"
          command: |
            curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
            source $HOME/.poetry/env
            echo 'export PATH="$HOME/.poetry/bin:$PATH"' > ~/.bashrc

run_tests: &run_tests
    steps:
      - checkout
      - install-poetry
      - run:
          name: "Run tests"
          command: |
            python --version
            source ~/.bashrc
            poetry install
            mkdir -p coverage_output
            export COVERAGE_FILE=coverage_output/.coverage.$CIRCLE_BUILD_NUM
            poetry run pytest --cov playground -s test.py
      - persist_to_workspace:
          root: coverage_output
          paths:
            - .coverage.*
jobs:
  python-27:
    docker:
      - image: python:2.7
    <<: *run_tests

  python-37:
    docker:
      - image: python:3.7
    <<: *run_tests

  coverage:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: coverage_output
      - run:
          name: "Check coverage"
          command: |
            pip install coverage
            coverage combine coverage_output/
            coverage report --show-missing --skip-covered --fail-under=100

  release:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - install-poetry
      - run:
          name: "Release"
          command: |
            poetry --help
#            pip install carthorse
#            carthorse

common: &common
  jobs:
    - python-27
    - python-37
    - coverage:
        requires:
          - python-27
          - python-37
    - release:
        requires:
          - coverage
        filters:
          branches:
            only: master

workflows:
  version: 2
  push:
    <<: *common
  periodic:
    <<: *common
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master
